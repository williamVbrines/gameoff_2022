[gd_resource type="VisualShader" load_steps=7 format=3 uid="uid://d6t6aevet6j4"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_54uw0"]
input_name = "uv"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_vcdg1"]
parameter_name = "Pixelation_Amount"
hint = 2
min = 256.0
max = 512.0
step = 2.0
default_value = 1.0

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_gw0al"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_bqobt"]
default_input_values = [0, Vector2(0, 0)]
op_type = 0
function = 17

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_hurau"]
output_port_for_preview = 0
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 3

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_srxvx"]
output_port_for_preview = 0
source = 1

[resource]
code = "shader_type canvas_item;
uniform float Pixelation_Amount : hint_range(256, 512, 2);



void fragment() {
// Input:2
	vec2 n_out2p0 = UV;


// FloatParameter:3
	float n_out3p0 = Pixelation_Amount;


// VectorOp:4
	vec2 n_out4p0 = n_out2p0 * vec2(n_out3p0);


// VectorFunc:5
	vec2 n_out5p0 = floor(n_out4p0);


// VectorOp:6
	vec2 n_out6p0 = n_out5p0 / vec2(n_out3p0);


	vec4 n_out7p0;
// Texture2D:7
	n_out7p0 = textureLod(SCREEN_TEXTURE, n_out6p0, 0.0);


// Output:0
	COLOR.rgb = vec3(n_out7p0.xyz);


}
"
graph_offset = Vector2(-192.908, -12.9408)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(940, 120)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_54uw0")
nodes/fragment/2/position = Vector2(-180, 60)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatParameter_vcdg1")
nodes/fragment/3/position = Vector2(-160, 140)
nodes/fragment/4/node = SubResource("VisualShaderNodeVectorOp_gw0al")
nodes/fragment/4/position = Vector2(160, 60)
nodes/fragment/5/node = SubResource("VisualShaderNodeVectorFunc_bqobt")
nodes/fragment/5/position = Vector2(300, 80)
nodes/fragment/6/node = SubResource("VisualShaderNodeVectorOp_hurau")
nodes/fragment/6/position = Vector2(440, 140)
nodes/fragment/7/node = SubResource("VisualShaderNodeTexture_srxvx")
nodes/fragment/7/position = Vector2(620, 140)
nodes/fragment/connections = PackedInt32Array(2, 0, 4, 0, 3, 0, 4, 1, 4, 0, 5, 0, 5, 0, 6, 0, 3, 0, 6, 1, 6, 0, 7, 0, 7, 0, 0, 0)
